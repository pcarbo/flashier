% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flash_add_greedy.R
\name{flash.add.greedy}
\alias{flash.add.greedy}
\title{Greedily add factors to a flash object}
\usage{
flash.add.greedy(
  flash,
  Kmax = 1,
  prior.family = prior.point.normal(),
  init.fn = init.fn.default,
  extrapolate = TRUE,
  conv.crit.fn = calc.obj.diff,
  tol = set.default.tol(flash),
  maxiter = 500,
  verbose.lvl = get.verbose.lvl(flash)
)
}
\arguments{
\item{flash}{A \code{flash} or \code{flash.fit} object to which factors are
to be added.}

\item{Kmax}{The maximum number of factors to be added. This will not
necessarily be the total number of factors added by
\code{flash.add.greedy}, since factors are only added as long as they
increase the variational lower bound on the log likelihood for the model.}

\item{prior.family}{Indicates the family of distributions that the priors on
  the loadings are
  assumed to belong to. Can be a list of length 1 or length \eqn{N}, where
  \eqn{N} is the number of modes (\eqn{N = 2} for matrices; \eqn{N = 3} for
  tensors). Each list element must be a prior family defined by one of the
  convenience functions \code{\link{prior.normal}},
  \code{\link{prior.point.normal}},
  \code{\link{prior.point.laplace}}, \code{\link{prior.nonzero.mode}},
  \code{\link{prior.scale.normal.mix}}, \code{\link{prior.unimodal}},
  \code{\link{prior.symmetric.unimodal}},
  \code{\link{prior.nonnegative}}, or \code{\link{prior.nonpositive}},
  or a custom prior type of a similar form (see \code{\link{prior.normal}}
  for details).

  \code{prior.family} can also be a list of lists, in which case the first
  list specifies the family or families for the first factor, the second
  specifies the family or families for the second factor, and so on. The
  last list element is then re-used as often as necessary. See
  \code{\link{flash}} for examples.}

\item{init.fn}{The function used to initialize factors. Functions
\code{\link{init.fn.default}} and \code{\link{init.fn.softImpute}} have
been supplied, but custom initialization functions may also be used. See
\code{\link{init.fn.default}} for details.}

\item{extrapolate}{Whether to use an extrapolation technique
inspired by Ang and Gillis (2019) to accelerate the fitting of greedy
and fixed factors. Control parameters are handled via global options and
can be set by calling
\code{options("extrapolate.control") <- control.param}.}

\item{conv.crit.fn}{The function used to determine whether convergence has
occurred. TODO: details.}

\item{tol}{The convergence tolerance.}

\item{maxiter}{The maximum number of iterations when optimizing a greedily
added factor.}

\item{verbose.lvl}{When and how to display progress updates. Set to
\code{0} for none, \code{1} for updates after a factor is added or a
backfit is completed, \code{2} for additional notifications about the
variational lower bound, and \code{3} for updates after every iteration.
Set to \code{-1} to output a single tab-delimited table of values.}
}
\description{
Adds factors to a flash object in a "greedy" manner. Up to \code{Kmax}
  factors are added one at a time. At each step, \code{flash.add.greedy}
  attempts to find an optimal additional (rank-one) factor given all
  previously added factors. The additional factor is retained if it
  increases the ELBO; otherwise, fitting terminates.
}
