% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init_fns.R
\name{init.fn.default}
\alias{init.fn.default}
\title{Initialize a flash factor}
\usage{
init.fn.default(
  flash,
  mode.signs,
  tol = 1/max(get.dims(flash)),
  maxiter = 100,
  seed = 666
)
}
\arguments{
\item{flash}{A \code{flash.fit} object.}

\item{mode.signs}{A vector of length 2 (for matrices) or 3 (for tensors)
that indicates the signs of the priors (-1 for nonpositive, 1 for
nonnegative, and 0 otherwise).}

\item{tol}{Convergence tolerance.}

\item{maxiter}{Maximum number of iterations.}

\item{seed}{Since initialization is random, a default seed is set for
reproducibility.}
}
\description{
Initializes a new flash factor. Custom initialization functions can also be
  used. They should accept parameters \code{flash} and \code{mode.signs} and
  output a list of vectors (which will be interpreted as a rank-one object).
  \code{mode.signs} was added so that \code{init.fn.default} can initialize
  nonnegative and semi-nonnegative factors, but it can safely be ignored
  when writing a custom initialization function.
}
\examples{
library(magrittr)

# Change the default initialization maxiter
my.init.fn <- function(flash, mode.signs) {
  return(init.fn.default(flash, mode.signs, maxiter = 500))
}

fl <- flash.init(gtex) \%>\% flash.add.greedy(init.fn = my.init.fn)

# A wrapper to function nnmf in package NNLM
nnmf.init.fn <- function(flash, mode.signs) {
  R <- flash$Y - flashier:::lowrank.expand(flash$EF)
  res <- NNLM::nnmf(R, verbose = FALSE)
  return(list(as.vector(res$W), as.vector(res$H)))
}

fl.nnmf <- flash.init(gtex) \%>\%
  flash.add.greedy(prior.family = prior.nonnegative(), init.fn = nnmf.init.fn)

}
\seealso{
init.fn.softImpute
}
